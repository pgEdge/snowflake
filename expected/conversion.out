/*
 * A series of tests on transformation of serial and IDENTITY columns to the
 * Snowflake-default ones.
 */
\set VERBOSITY terse
SET snowflake.node = 1;
CREATE EXTENSION snowflake;
-- Need to check two types of serial values: DEFAULT and IDENTITY
CREATE TABLE t1(x serial);
CREATE TABLE t2 (x integer GENERATED ALWAYS AS IDENTITY);
CREATE TABLE t3 (x integer GENERATED BY DEFAULT AS IDENTITY);
CREATE SEQUENCE seq_1 START 42;
INSERT INTO t1 VALUES (DEFAULT);
INSERT INTO t2 VALUES (DEFAULT);
INSERT INTO t3 VALUES (DEFAULT);
SELECT snowflake.convert_sequence_to_snowflake('t1'); -- ERROR, not a sequence
ERROR:  Input value "public.t1" is not used by any relation as a DEFAULT value or an IDENTITY
SELECT snowflake.convert_sequence_to_snowflake('seq_1'); -- ERROR, not assocoated with any relation
ERROR:  Input value "public.seq_1" is not used by any relation as a DEFAULT value or an IDENTITY
SELECT snowflake.convert_sequence_to_snowflake('t1_x_seq');
NOTICE:  EXECUTE ALTER TABLE public.t1 ALTER COLUMN x SET DATA TYPE int8
NOTICE:  EXECUTE ALTER TABLE public.t1 ALTER COLUMN x SET DEFAULT snowflake.nextval('public.t1_x_seq'::regclass)
NOTICE:  ALTER SEQUENCE public.t1_x_seq NO CYCLE MAXVALUE 2
 convert_sequence_to_snowflake 
-------------------------------
                             3
(1 row)

SELECT snowflake.convert_sequence_to_snowflake('t2_x_seq');
ERROR:  transformation of an IDENTITY column to snowflake is not supported
SELECT snowflake.convert_sequence_to_snowflake('t3_x_seq');
ERROR:  transformation of an IDENTITY column to snowflake is not supported
INSERT INTO t1 VALUES (DEFAULT);
INSERT INTO t2 VALUES (DEFAULT);
INSERT INTO t3 VALUES (DEFAULT);
-- Check the result of conversion
SELECT x <= 2 AS is_not_snowflake_value FROM t1 ORDER BY x;
 is_not_snowflake_value 
------------------------
 t
 f
(2 rows)

SELECT * FROM t2 ORDER BY x;
 x 
---
 1
 2
(2 rows)

SELECT * FROM t3 ORDER BY x;
 x 
---
 1
 2
(2 rows)

-- Cleanup
DROP TABLE t1,t2 CASCADE;
DROP EXTENSION snowflake;
